eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgICBidWlsZDoKICAgICAgaW1hZ2U6IGRvY2tlcjpsYXRlc3QKICAgICAgZW52aXJvbm1lbnQ6CiAgICAgICAgICAtIERPQ0tFUl9IT1NUPXVuaXg6Ly8vdG1wL2hvc3Quc29jawogICAgICAgICAgLSBESFVCX0xPR0lOPSR7REhVQl9MT0dJTn0KICAgICAgICAgIC0gREhVQl9QVz0ke0RIVUJfUFd9CiAgICAgICAgICAjLSBET0NLRVJfQVVUSD0ke0RPQ0tFUl9BVVRIfQogICAgICB2b2x1bWVzOgogICAgICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdG1wL2hvc3Quc29jazpydwogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICAgIGNvbW1hbmRzOgogICAgICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcGluZ3UvdmluZ3VwYWQ6bGF0ZXN0IC4KICAgICAgd2hlbjoKICAgICAgICAgIGJyYW5jaDogWyBtYXN0ZXIgXQoKICAgIHB1Ymxpc2g6CiAgICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgICB1c2VybmFtZTogJHtESFVCX0xPR0lOfQogICAgICBwYXNzd29yZDogJHtESFVCX1BXfQogICAgICByZXBvOiBwaW5ndS92aW5ndXBhZAogICAgICB0YWdzOiBsYXRlc3QKICAgICAgd2hlbjoKICAgICAgICBzdGF0dXM6IFsgc3VjY2VzcyBdCiAgICAgICAgICAgICAgICAKICAgIG5vdGkyZnk6CiAgICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICAgIHdlYmhvb2s6ICR7U0xBQ0tfV0VCSE9PS30gICAgCiAgICAgIGNoYW5uZWw6IGRyb25lCiAgICAgIHVzZXJuYW1lOiBkcm9uZS1jaQogICAgICB0ZW1wbGF0ZTogfAogICAgICAgICp7eyByZXBvLm5hbWUgfX0qICN7eyBidWlsZC5udW1iZXIgfX0gYnkgKnt7IGJ1aWxkLmF1dGhvciB9fSogZmluaXNoZWQgd2l0aCBhICp7eyB1cHBlcmNhc2UgYnVpbGQuc3RhdHVzIH19KiBpbiB7eyBzaW5jZSBidWlsZC5jcmVhdGVkIH19CiAgICAgICAgKkNvbW1pdCo6IF97eyBidWlsZC5jb21taXQgfX1fCiAgICAgICAgKkJyYW5jaCo6ICBfe3sgYnVpbGQuYnJhbmNoIH19XwogICAgICAgIHt7IGJ1aWxkLmxpbmsgfX0gCiAgICAgIHdoZW46CiAgICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnLCBkZXBsb3ltZW50LCBwdWxsX3JlcXVlc3QgXQogICAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBmYWlsdXJlIF0K.GIJrB3ddUAl2ZJ7cn13jW0TzZlivdEJXzmkjeiajAdM